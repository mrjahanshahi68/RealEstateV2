@{
    Layout = "~/ClientApp/Views/Shared/_AdminLayout.cshtml";
}

<style>
	main {
		overflow: hidden;
	}

	#window {
		margin: 0;
		padding: 0;
		/*border-width: 0;*/
		height: 100%; /* DO NOT USE !important for setting the Grid height! */
	}

	#grid {
		margin: 0;
		padding: 0;
		border-width: 0;
		height: 85%; /* DO NOT USE !important for setting the Grid height! */
	}

	 .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11 {
		float: right;
	}

	.col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11 {
		float: right;
	}

	.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11 {
		float: right;
	}

	.input-group-addon:last-child {
		border-right: 0;
		border-left: unset;
	}

	.input-group .form-control:first-child, .input-group-addon:first-child, .input-group-btn:first-child > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle) {
		border-top-right-radius: unset;
		border-bottom-right-radius: unset;
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}

		.input-group .form-control:last-child, .input-group-addon:last-child, .input-group-btn:last-child > .btn, .input-group-btn:last-child > .dropdown-toggle, .input-group-btn:first-child > .btn:not(:first-child) {
			border-bottom-right-radius: 0;
			border-top-right-radius: 0;
			border-bottom-left-radius: unset;
			border-top-left-radius: unset;
		}
	.btn-success {
		color: #48956c;
		background-color: #ffffff;
		border-color: #48956c;
		border-style: dashed;
		padding: 5px 18px;
		border-width: 2px;
		font-weight: 800;
	}
</style>
<div>
	<div  class="panel panel-default" ng-controller="propertyInfoController" ng-init="init()">
		<div class="panel-heading">
			<span class="title">مدیریت ملک</span>
		</div>
		<div class="panel-body" style="height:500px;">
			<div class="grid-toolbar">
				<a class="btn btn-primary" href="/propertyinfo/registerproperty">ثبت ملک</a>
				<a class="btn btn-success" ng-click="print()">پرینت</a>
			</div>
			<div class="k-rtl" id="window">
				<div kendo-grid id="grid" k-ng-delay="gridOptions" k-options="gridOptions"></div>
			</div>
		</div>

		<div id="print-section" style="display:none">
			<style>
				 .print-container {
					position: relative;
					direction: rtl;
					font-family:iranyekan;
				}

					 .print-container label {
						/*display: block;*/
					}
					.print-container .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11 {
						float: right;
					}

					.print-container .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11 {
						float: right;
					}

					.print-container .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11 {
						float: right;
					}

					.print-container .print-header {
						padding: 10px;
						background-color: #f5f5f5;
					}
					.print-container .print-body {
						padding:15px;
					}
					
			</style>
			<div style="margin:10px">
				@*<h1>املاک vip</h1>*@
				<div class="print-container" style="border:1px solid #ddd;margin-bottom:5px" ng-repeat="property in temp.selectedItems">
					<div class="print-header">
						<span ng-bind="temp.transactionTypes[property.Type].text"></span> - <span ng-bind="property.Title"></span> - <b ng-bind="property.PropertyCode"></b>
					</div>
					<div class="print-body" id="print-area">
						<div class="row">
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">نوع ملک : </label>
								<span class="col-12" ng-bind="property.PropertyTypeName"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">متراژ زمین : </label>
								<span class="col-12" ng-bind="property.LandingArea ? property.LandingArea + ' متر' : '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">متراژ بنا : </label>
								<span class="col-12" ng-bind="property.BuildingArea ? property.BuildingArea + ' متر' : '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">اتاق: </label>
								<span class="col-12" ng-bind="property.BedRoom ? property.BedRoom : '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">حمام : </label>
								<span class="col-12" ng-bind="property.BathRoom ? property.BathRoom : '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">تعداد طبقه : </label>
								<span class="col-12" ng-bind="property.Floor ? property.Floor : '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">طبقه ملک : </label>
								<span class="col-12" ng-if="property.FloorNumber==null">-</span>
								<span class="col-12" ng-if="property.FloorNumber==0">همکف</span>
								<span class="col-12" ng-if="property.FloorNumber==-1">زیرهمکف</span>
								<span class="col-12" ng-if="property.FloorNumber>0" ng-bind="property.FloorNumber">زیرهمکف</span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">موقعیت : </label>
								<span class="col-12" ng-bind="property.Position ? property.Position: '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">نما : </label>
								<span class="col-12" ng-bind="property.PropertyView ? property.PropertyView : '-'"></span>
							</div>
							<div class="col-12 col-md-4 col-lg-2">
								<label class="col-12">سال ساخت : </label>
								<span class="col-12" ng-bind="property.ConstructorYear ? property.ConstructorYear : '-'"></span>
							</div>
						</div>
						<div class="col-12">
							<label class="col-12">امکانات رفاهی : </label>
							<span class="col-12" ng-repeat="welfare in property.Welfares track by $index" ng-bind="$index==(property.Welfares.length - 1) ? welfare.Name  : welfare.Name + ' - '"></span>
						</div>
						<div class="col-12">
							<label class="col-12">توضیحات : </label>
							<span class="col-12" ng-bind="property.Description ? property.Description : 'فاقد توضیحات' "></span>
						</div>
						<div class="row">
							<div class="col-xs-12 col-md-4" ng-if="property.Type==1">
								<label class="col-12">مبلغ رهن : </label>
								<strong ng-if="property.MortgagePrice==0">رایگان</strong>
								<strong ng-if="property.MortgagePrice>=0" ng-bind="seperatePrice(property.MortgagePrice) + ' تومان'"></strong>
								<strong ng-if="property.MortgagePrice==null">توافقی</strong>
							</div>
							<div class="col-xs-12 col-md-4" ng-if="property.Type==1">
								<label class="col-12">مبلغ اجاره : </label>
								<strong ng-if="property.RentalPrice==0">رایگان</strong>
								<strong ng-if="property.RentalPrice>=0" ng-bind="seperatePrice(property.RentalPrice) + ' تومان'"></strong>
								<strong ng-if="property.RentalPrice==null">توافقی</strong>
							</div>
							<div class="col-xs-12 col-md-4" ng-if="property.Type!=1">
								<label class="col-12">مبلغ فروش : </label>
								<strong ng-if="property.SalePrice==0">رایگان</strong>
								<strong ng-if="property.SalePrice>=0" ng-bind="seperatePrice(property.SalePrice) + ' تومان'"></strong>
								<strong ng-if="property.SalePrice==null">توافقی</strong>
							</div>
						</div>
						<div class="col-12">
							<label class="col-12">آدرس : </label>
							<span class="col-12" ng-bind="property.RegionName + ' - ' + property.Address"></span>
						</div>
					</div>
				</div>
			</div>
			
		</div>
	</div>

</div>

<script>
	app.controller("propertyInfoController", function ($scope, $uibModal, dataService, messageService, helper) {

		$scope.temp = {
			propertyStatuses: null,
			transactionTypes: null,
			registerUserType: [{ value: 0, text: "مالک" }, { value: 1, text: "مدیر" }],
			selectedItems:[],
		}

		$scope.init = function () {
			$scope.temp.transactionTypes = Object.keys(helper.enums.TransactionTypes).map(function (item) { return helper.enums.TransactionTypes[item] });
			$scope.temp.propertyStatuses = Object.keys(helper.enums.PropertyStatuses).map(function (item) { return helper.enums.PropertyStatuses[item] });
			loadGridOptions();
		}

		function loadGridOptions() {
			$scope.gridOptions = {
				dataSource: new kendo.data.DataSource({
					transport: {
						read: function (options) {
							var filterParameter = helper.translateToFilterParameter(options.data);
							console.log(options);
							dataService.filterBy('PropertyInfo/GetProperties', filterParameter).then(function (result) {
								options.success(result);
							});
						},
						parameterMap: function (options) {
							// debugger;
							console.log(options);
						}
					},
					pageSize: 20,
					serverFiltering: true,
					serverPaging: true,
					serverSorting: true,
					schema: {
						data: function (e) {
							return e.Records;
						},
						total: function (e) {
							return e.TotalCount
						},
						model: {
							id: "ID",
							fields: {
								ID: { type: "number", editable: false },
								PropertyCode: { type: "string" },
								Title: { type: "string" },
								Status: { type: "enum" },
								Type: { type: "enum" },
								PropertyTypeId: { type: "number" },
								PropertyTypeName: { type: "string" },
								DocumentTypeId: { type: "number" },
								DocumentTypeName: { type: "string" },
								BuildingArea: { type: "number" },
								LandingArea: { type: "number" },
								BathRoom: { type: "number" },
								BedRoom: { type: "number" },
								Floor: { type: "number" },
								FloorNumber: { type: "number" },
								Apartment: { type: "number" },
								Position: { type: "string" },
								PropertyView: { type: "string" },
								ConstructorYear: { type: "number" },
								//Welfares: { type: "string" },
								RegionName: { type: "string" },
								Address: { type: "string" },
								SalePrice: { type: "number" },
								MortgagePrice: { type: "number" },
								RentalPrice: { type: "number" },
								FullName: { type: "string" },
								Tel: { type: "string" },
								ReagentFullName: { type: "string" },
								ReagentTel: { type: "string" },
								IsDeleted: { type: "boolean" },
								RegisterBy: { type: "enum" },
							}
						}
					}
				}),
				sortable: true,
				pageable: true,
				scrollable: true,
				filterable: {
					extra: false,
					operators: {
						string: {
							eq: "مساوی",
							neq: "نامساوی",
							contains: "شامل"
						},
						number: {
							eq: "مساوی",
							neq: "نامساوی",
							contains: "شامل",
							gte: "بزرگتر مساوری",
							lte: "کوچکتر مساوی",
						},
						enums: {
							eq: "مساوی",
							neq: "نامساوی",
						},
						//boolean: {
						//	eq: "مساوی",
						//	neq: "نامساوی",
						//}
					}

				},
				//height:"600px",
				columns:
				[
					{
						width: "200px",
						template: function (e) {
							var commandBtn = "<button class=\"btn btn-primary\"style=\"margin:2px;\" type=\"button\" ng-click=\"edit(dataItem)\">ویرایش</button>";
							commandBtn += "<button class=\"btn btn-danger\" style=\"margin:2px;\" type=\"button\" ng-click=\"delete(dataItem)\">حذف</button>";
							//commandBtn += "<button class=\"btn btn-success\" type=\"button\" ng-click=\"edit(dataItem)\">انتساب دسترسی</button>";
							return commandBtn;
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						width: "100px",
						attributes: {
							style:"text-align:center;"
						},
						template: function (e) {
							if ($scope.temp.selectedItems.filter(function (item) { return item.ID === e.ID })[0]) {
								return "<input type=\"checkbox\" checked='checked' ng-click=\"selected(dataItem)\"/>";
							}
							else {
								return "<input type=\"checkbox\" ng-click=\"selected(dataItem)\"/>";
							}
							
						}
					},
					{
						title: "کدملک",
						field: "PropertyCode",
						width: "120px",
						attributes: {
							style: "text-align: center"
						}
						//attributes:"text-align:center"
					},
					{
						title: "عنوان",
						field: "Title",
						width: "300px",
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "وضعیت",
						field: "Status",
						values: $scope.temp.propertyStatuses,
						width: "130px;",
						attributes: {
							style: "text-align: center"
						}

					},
					{
						title: "ثبت کننده",
						field: "RegisterBy",
						values: $scope.temp.registerUserType,
						width: "160px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.RegisterBy) {
								return "<span>مدیر</span>";
							}
							else {
								return "<span>مالک</span>";
							}
						}

					},
					{
						title: "معامله",
						field: "Type",
						values: $scope.temp.transactionTypes,
						width: "130px",
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "متراژ زمین",
						field: "LandingArea",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.LandingArea) {
								return "<span>" + e.LandingArea + " متر</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "متراژ بنا",
						field: "BuildingArea",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.BuildingArea) {
								return "<span>" + e.BuildingArea +" متر</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "اتاق",
						field: "BedRoom",
						width: "110px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.BedRoom) {
								return "<span>" + e.BedRoom + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "حمام",
						field: "BathRoom",
						width: "110px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.BathRoom) {
								return "<span>" + e.BathRoom + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "تعداد طبقه",
						field: "Floor",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.Floor) {
								return "<span>" + e.Floor + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "طبقه ملک",
						field: "FloorNumber",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.FloorNumber) {
								if (e.FloorNumber == 0) {
									return "<span>همکف</span>";
								}
								else if (e.FloorNumber == -1) {
									return "<span>زیرهمکف</span>";
								}
								else {
									return "<span>" + e.FloorNumber + "</span>";
								}

							}
							return "<span>-</span>";
						}
					},
					{
						title: "تعداد واحد",
						field: "Apartment",
						width: "150px",
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "موقعیت",
						field: "Position",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.Position) {
								return "<span>" + e.Position + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "نما",
						field: "PropertyView",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.PropertyView) {
								return "<span>" + e.PropertyView + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "سال ساخت",
						field: "ConstructorYear",
						width: "150px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.ConstructorYear) {
								return "<span>" + e.ConstructorYear + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "آدرس",
						field: "Address",
						width: "300px",
						attributes: {
							style: "text-align: center"
						},
						template: function (e) {
							if (e.Address) {
								return "<span>" + e.Address + "</span>";
							}
							return "<span>-</span>";
						}
					},
					{
						title: "مبلغ فروش",
						field: "SalePrice",
						values: $scope.temp.userTypes,
						width: "150px",
						template: function (e) {
							if (e.Type == 2 || e.Type==3) {
								if (e.SalePrice === 0 || e.SalePrice > 0) {
									if (e.SalePrice === 0) {
										return "<span>رایگان</span>";
									}
									else {
										return "<span>" + numeral(e.SalePrice).format("0,0") + "</span>"
									}
								}
								return "توافقی";
							}
							else {
								return "-";
							}
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "مبلغ رهن",
						field: "MortgagePrice",
						width: "150px",
						template: function (e) {
							if (e.Type == 1) {
								if (e.MortgagePrice === 0 || e.MortgagePrice >= 0) {
									if (e.MortgagePrice === 0) {
										return "<span>رایگان</span>";
									}
									else {
										return "<span>" + numeral(e.MortgagePrice).format("0,0") + "</span>"
									}
								}
								return "توافقی";
							}
							else {
								return "-";
							}
							
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "مبلغ اجاره",
						field: "RentalPrice",
						width: "150px",
						template: function (e) {
							if (e.Type == 1) {
								if (e.RentalPrice === 0 || e.RentalPrice >= 0) {
									if (e.RentalPrice === 0) {
										return "<span>رایگان</span>";
									}
									else {
										return "<span>" + numeral(e.RentalPrice).format("0,0") + "</span>"
									}
								}
								return "توافقی";
							}
							else {
								return "-";
							}
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "امکانات رفاهی",
						field: "Welfares",
						width: "400px",
						filterable: false,
						template: function (e) {
							var text = "";
							for (var i = 0; i < e.Welfares.length; i++) {
								text += e.Welfares[i].Name + " - ";
							}
							if ($.trim(text) != "")
								return '<span>' + text.substr(0, text.length - 3);
							return '<span>ندارد</span>';
						}
					},
					{
						title: "نام مالک",
						field: "FullName",
						width: "150px",
						template: function (e) {
							if ($.trim(e.FullName) != "")
								return e.FullName
							return '-';
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "شماره مالک",
						field: "Tel",
						width: "150px",
						template: function (e) {
							if (e.Tel)
								return e.Tel
							return '-';
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "نام معرف",
						field: "ReagentFullName",
						width: "150px",
						template: function (e) {
							if ($.trim(e.ReagentFullName)!="")
								return e.ReagentFullName
							return '-';
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "شماره معرف",
						field: "ReagentTel",
						width: "150px",
						template: function (e) {
							if (e.ReagentTel)
								return e.ReagentTel
							return '-';
						},
						attributes: {
							style: "text-align: center"
						}
					},
					{
						title: "تاریخ ثبت",
						field: "RegisterDate",
						width: "150px",
						filterable: false,
						template: function (e) {
							if (e.RegisterDate)
								return moment(e.RegisterDate).format('jYYYY/jM/jD');
							return "-";
						},
						attributes: {
							style: "text-align: center"
						}
					},
				],
			}
		}
		$scope.selected = function (data) {
			if ($scope.temp.selectedItems.length > 0 && $scope.temp.selectedItems.filter(function (item) { return item.ID === data.ID })[0]) {
				$scope.temp.selectedItems = $scope.temp.selectedItems.filter(function (item) { return item.ID !== data.ID });
			} else {
				$scope.temp.selectedItems.push(data);
			}
		}
		$scope.print = function () {
			if ($scope.temp.selectedItems.length == 0) {
				messageService.info("حداقل یک ملک برای پرینت انتخاب نمایید");
				return;
			}
			$scope.printToCart("print-section")
		}
		$scope.printToCart = function (printSectionId) {
			var innerContents = document.getElementById(printSectionId).innerHTML;
			var popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');
			popupWinindow.document.open();
			popupWinindow.document.write('<html><head><link rel="stylesheet" type="text/css" href="/ClientApp/Contents/common.css" /><link rel="stylesheet" type="text/css" href="/ClientApp/Contents/bootstrap.css" /></head><body  onload="window.print()"><div ng-controller="propertyInfoController">' + innerContents + '</div></body></html>');
			popupWinindow.document.close();
		}
		$scope.edit = function (dataItem) {
			if (dataItem) {
				document.location.href = "propertyInfo/RegisterProperty?id=" + dataItem.ID;
			}
		}
		$scope.delete = function (dataItem) {
			if (dataItem) {
				var conf = confirm("آیا مطمئن هستید؟");
				if (conf) {
					dataService.post("propertyInfo/DeleteProperty", { ID: dataItem.ID }).then(function (result) {
						$scope.gridOptions.dataSource.read();
						messageService.success("عملیات با موفیت انجام شده");
					});
				}
			}
		}
		$scope.seperatePrice = function (price) {
			return numeral(price).format("0,0");
		}

	});
</script>