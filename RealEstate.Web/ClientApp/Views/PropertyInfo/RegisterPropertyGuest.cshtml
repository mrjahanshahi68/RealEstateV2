@{
    Layout = "~/ClientApp/Views/Shared/_AdminLayout.cshtml";
}
<style>
	.col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11 {
		float: right;
	}
	.col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11 {
		float: right;
	}
	.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11 {
		float: right;
	}

	.input-group-addon:last-child {
		border-right: 0;
		border-left: unset;
	}
	.input-group .form-control:first-child, .input-group-addon:first-child, .input-group-btn:first-child > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle) {
		border-top-right-radius: unset;
		border-bottom-right-radius: unset;
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}
	.input-group .form-control:last-child, .input-group-addon:last-child, .input-group-btn:last-child > .btn, .input-group-btn:last-child > .dropdown-toggle, .input-group-btn:first-child > .btn:not(:first-child) {
		border-bottom-right-radius: 0;
		border-top-right-radius: 0;
		border-bottom-left-radius: unset;
		border-top-left-radius: unset;
	}
	nav {
		background-color: #5cac83d4;
		box-shadow: inset -2px 0px 20px 0px #0000006e;
	}
	main {
		right: 0;
		background-color: #2a2c2b;
	}
	.property-register-form {
		box-shadow: 0 0 4px 1px #ffffff0a;
		margin: 0 auto;
		background-color: #fff;
		border-radius: 0;	
	}
</style>

<div class="container property-register-form" ng-controller="registerPropertyGuestController" ng-init="init()">
	<div class="row" style="margin-top:20px;" >
		<div class="col-lg-3 col-md-6 col-sm-6 col-xs-12 form-group">
			<label>نوع معامله : </label>
			<select ng-model="model.Type" class="form-control">
				<option value="">--- نوع معامله را انتخاب کنید ---</option>
				<option ng-selected="transactionType.value == model.Type" ng-repeat="transactionType in temp.transactionTypes"
						ng-value="transactionType.value " ng-bind="transactionType.text"></option>
			</select>

		</div>
		<div class="col-lg-3 col-md-6 col-sm-6 col-xs-12 form-group">
			<label>نوع ملک : </label>
			<select ng-model="model.PropertyTypeId" class="form-control">
				<option value="">--- نوع معامله را انتخاب کنید ---</option>
				<option ng-selected="propType.Key == model.PropertyTypeId" ng-repeat="propType in temp.propertyTypes"
						ng-value="propType.Key " ng-bind="propType.Value"></option>
			</select>
		</div>
		<div class="col-lg-3 col-md-6 col-sm-6 col-xs-12 form-group">
			<label>نوع سند : </label>
			<select ng-model="model.DocumentTypeId" class="form-control">
				<option value="">--- نوع سند را انتخاب کنید ---</option>
				<option ng-selected="docType.Key == model.DocumentTypeId" ng-repeat="docType in temp.documentTypes"
						ng-value="docType.Key" ng-bind="docType.Value"></option>
			</select>
		</div>
	</div>
	<div class="row">
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>متراژ زمین  : </label><span style="font-size:11px">(متر مربع)</span>
			<input type="number" class="form-control" data-toggle="popover" data-content="متراژ زمین را وارد نمایید" ng-model="model.LandingArea" placeholder="متراژ زمین" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>متراژ بنا : </label><span style="font-size:11px">(متر مربع)</span>
			<input type="number" class="form-control" data-toggle="popover" data-content="متراژ بنا را وارد نمایید" ng-model="model.BuildingArea" placeholder="متراژ بنا" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>تعداد اتاق خواب : </label>
			<input type="number" class="form-control" data-toggle="popover" data-content="تعداد اتاق خواب را وارد نمایید" ng-model="model.BedRoom" placeholder="تعداد اتاق خواب" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>تعداد حمام : </label>
			<input type="number" class="form-control" data-toggle="popover" data-content="تعداد حمام را وارد نمایید" ng-model="model.BathRoom" placeholder="تعداد حمام" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>طبقه ملک: </label>
			<input type="number" class="form-control" data-toggle="popover" data-content="طبقه ملک را وارد نمایید" ng-model="model.FloorNumber" placeholder="تعداد حمام" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>تعداد طبقات : </label>
			<input type="number" class="form-control" data-toggle="popover" data-content="تعداد طبقات را وارد نمایید" ng-model="model.Floor" placeholder="تعداد طبقات" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>تعداد واحد : </label>
			<input type="number" class="form-control" data-toggle="popover" data-content="تعداد واحد را وارد نمایید" ng-model="model.Apartment" placeholder="تعداد واحد" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>سال ساخت : </label>
			<input type="number" class="form-control" data-toggle="popover" data-content="سال ساخت را وارد نمایید" ng-model="model.ConstructorYear" placeholder="سال ساخت" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>موقعیت ملک: </label>
			<input type="text" class="form-control" data-toggle="popover" data-content="موقعیت ملک را وارد نمایید" ng-model="model.Position" placeholder="موقعیت ملک" />
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>نمای ملک : </label>
			<input type="text" class="form-control" data-toggle="popover" data-content="نمای ملک را وارد نمایید" ng-model="model.PropertyView" placeholder="نمای ملک" />
		</div>



	</div>
	<div class="col-xs-12 form-group">
		@*<switcher ng-model="model.IsActive" ng-change="isActiveChanged(status, sender)"></switcher>*@
		@*<switcher ng-repeat="welfare in temp.welfares" ng-change="onWelfareClick(welfare,sender)"></switcher>*@
		<label>امکانات رفاهی :</label>
		<div>
			<div class="switch-checkbox switcher" ng-repeat="welfare in temp.welfares">
				<label for="welfare_{{welfare.Key}}">
					<input ng-click="welfareChange($event,welfare)" data-value="{{welfare.Key}}" welfare-switch type="checkbox" id="welfare_{{welfare.Key}}" ng-checked="welfare.selected ? 'checked' : ''">
					<span><small></small></span>
					<small ng-bind="welfare.Value"></small>
				</label>
			</div>
		</div>
	</div>
	<div class="row k-rtl">
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>استان : </label>
			<select kendo-drop-down-list k-ng-delay="stateOptions" k-options="stateOptions" style="width:100%"></select>
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>شهر : </label>
			<select kendo-drop-down-list k-ng-delay="cityOptions" k-options="cityOptions" style="width:100%"></select>
		</div>
		<div class="col-lg-2 col-md-4 col-sm-6 col-xs-12 form-group">
			<label>منطقه : </label>
			<select kendo-drop-down-list id="drpRegion" k-ng-delay="regionOptions" k-options="regionOptions" style="width:100%"></select>
		</div>
		<div class="col-sm-6 col-xs-12 form-group">
			<label>آدرس : </label>
			<input type="text" ng-model="model.Address" class="form-control" />
		</div>
	</div>
	<div class="row">
		<div class="col-xs-12 form-group">
			<label>توضحیات تکمیلی : </label>
			<textarea rows="6" class="form-control" ng-model="model.Description" placeholder="توضیحات تکمیلی"></textarea>
		</div>
	</div>
	<div class="row">
		<div class="col-12 col-lg-2 col-md-4 col-sm-6 col-lg-2  form-group">
			<label>نام مالک  :</label>
			<input type="text" class="form-control" data-toggle="popover" data-content="نام مالک را وارد نمایید" ng-model="model.FirstName" placeholder="نام مالک" />
		</div>
		<div class="col-12 col-md-4 col-sm-6 col-lg-2 form-group">
			<label>نام خانوادگی مالک :</label>
			<input type="text" class="form-control" data-toggle="popover" data-content="نام خانوادگی مالک را وارد نمایید" ng-model="model.LastName" placeholder="نام خانوادگی مالک" />
		</div>
		<div class="col-12 col-md-4 col-sm-6 col-lg-2 form-group">
			<label>شماره تماس مالک :</label>
			<input type="text" class="form-control" data-toggle="popover" data-content="شماره تماس مالک را وارد نمایید" ng-model="model.Tel" placeholder="شماره تماس مالک" />
		</div>
		<div class="col-12 col-md-4 col-sm-6 col-lg-2 form-group" ng-if="model.Type==2 || model.Type==3 ">
			<label>مبلغ فروش : </label>
			<input type="text" numeral class="form-control" data-toggle="popover" data-content="مبلغ فروش ملک را وارد نمایید" ng-model="model.SalePrice" placeholder="مبلغ فروش" />
		</div>
		<div class="col-12 col-md-4 col-sm-6 col-lg-2 form-group" ng-if="model.Type==1">
			<label>مبلغ رهن : </label>
			<input type="text" numeral class="form-control" data-toggle="popover" data-content="مبلغ رهن ملک را وارد نمایید" ng-model="model.MortgagePrice" placeholder="مبلغ رهن" />
		</div>
		<div class="col-12 col-md-4 col-sm-6 col-lg-2 form-group" ng-if="model.Type==1">
			<label>مبلغ اجاره :</label>
			<input type="text" numeral class="form-control" data-toggle="popover" data-content="مبلغ اجاره ملک را وارد نمایید" ng-model="model.RentalPrice" placeholder="مبلغ اجاره" />
		</div>
	</div>
	<div class="row">
		<div class="col-12 col-md-6 form-group">
			<label>تصویر اصلی ملک : </label><span style="font-size:11px">(500 * 500 پیکسل)</span>
			<input type="file" id="fuCoverImage" />
			<img src="{{model.CoverImagePath}}" style="width:150px;height:auto" />
		</div>
		<div class="col-12 col-md-6 form-group">
			<style>
				.attachment-remove-btn {
					width: 100%;
					border-top-right-radius: 0px;
					border-top-left-radius: 0px;
				}
			</style>
			<label>بارگزاری تصویر (حداکثر حجم مجاز 4 مگابایت ) : </label>
			<input type="file" id="attachments" multiple />

		</div>
	</div>


	<div class="row">
		<div class="col-xs-12 form-group text-left">

			<button type="button" ng-click="save()" class="btn btn-primary" style="width:150px;">ثبت</button>
		</div>
	</div>
</div>

<script>
	app.controller("registerPropertyGuestController", function ($scope, $uibModal, dataService, messageService, helper) {

		$scope.model = {
			PropertyTypeId: null,
			DocumentTypeId: null,
			Title: null,
			Type: null,
			BuildingArea: null,
			LandingArea: null,
			BathRoom: null,
			BedRoom: null,
			Floor: null,
			FloorNumber: null,
			Apartment: null,
			Position: null,
			PropertyView: null,
			ConstructorYear: null,
			Welfares: null,
			RegionId: null,
			Address: null,
			Description: null,
			SalePrice: null,
			MortgagePrice: null,
			RentalPrice: null,
			FirstName: null,
			LastName: null,
			Tel: null,
			CoverImage: null,
		}
		$scope.temp = {
			selectedId: 0,
			propertyTypes: null,
			documentTypes: null,
			welfares: null,
			states: null,
			transactionTypes: null,
			selectedWelfares: [],
			selectedStateId: 24,
			selectedCityId: 914,
			selectedRegionId: null,
			formData: null,
			attachments: [],
			propertyStatuses: [],
			defaultWelfare:['آب','برق','گاز','تلفن']
		}

		$scope.init = function () {
			dataService.post('propertyInfoGuest/InitializeParameters').then(function (result) {
				$scope.temp.propertyTypes = result.PropertyTypes;
				$scope.temp.documentTypes = result.DocumentTypes;

				$scope.temp.welfares = result.Welfares.map(function (item) {
					return {
						Key: item.Key,
						Value: item.Value,
						selected: false,
					}
				});

				
				$scope.temp.states = result.States;
				$scope.temp.transactionTypes = Object.keys(helper.enums.TransactionTypes).map(function (item) { return helper.enums.TransactionTypes[item] });
				$scope.temp.propertyStatuses = Object.keys(helper.enums.PropertyStatuses).map(function (item) { return helper.enums.PropertyStatuses[item] });
				var region = $scope.temp.states.filter(function (item) {
					if (item.ParentId == $scope.temp.selectedCityId && item.Name == 'منطقه ندارد') {
						return item;
					}
				})[0];
				if (region) {
					$scope.temp.selectedRegionId = region.ID;
				}
				
				for (var i = 0; i < $scope.temp.welfares.length; i++) {
					if ($scope.temp.defaultWelfare.indexOf($scope.temp.welfares[i].Value) > -1) {
						$scope.temp.welfares[i].selected = true;
					}
				}
				loadOptions();
				$scope.$$phase || $scope.$apply();



			});
		}

		function loadOptions() {
			$scope.stateOptions = {
				dataSource: new kendo.data.DataSource({
					data: $scope.temp.states.filter(function (item) { return item.ParentId == null && item.Level == helper.enums.StateLevel.State.value }),
				}),
				value: $scope.temp.selectedStateId,
				dataTextField: "Name",
				dataValueField: "ID",
				optionLabel: "انتخاب استان",
				change: function (dataItem) {
					var item = this.dataItem();
					$scope.temp.selectedStateId = item.ID;
					$scope.temp.selectedCityId = null;
					$scope.cityOptions.dataSource.read();
					$scope.regionOptions.dataSource.read();
				}
			}
			$scope.cityOptions = {
				dataSource: new kendo.data.DataSource({
					transport: {
						read: function (options) {
							options.success($scope.temp.states.filter(function (item) { return item.ParentId == $scope.temp.selectedStateId && item.Level == helper.enums.StateLevel.City.value }));
						},
					},
				}),
				value: $scope.temp.selectedCityId,
				dataTextField: "Name",
				dataValueField: "ID",
				optionLabel: "انتخاب شهر",
				change: function (dataItem) {
					var item = this.dataItem();
					$scope.temp.selectedCityId = item.ID;
					$scope.regionOptions.dataSource.read();
					var region = $scope.temp.states.filter(function (item) {
						if (item.ParentId == $scope.temp.selectedCityId && item.Name == 'منطقه ندارد') {
							return item;
						}
					})[0];
					if (region) {
						$scope.temp.selectedRegionId = region.ID;
						var regionDropDown = $("#drpRegion").data("kendoDropDownList");
						regionDropDown.value($scope.temp.selectedRegionId);
					}
					$scope.$$phase || $scope.$apply();
				}
			}
			$scope.regionOptions = {
				dataSource: new kendo.data.DataSource({
					transport: {
						read: function (options) {
							options.success($scope.temp.states.filter(function (item) { return item.ParentId == $scope.temp.selectedCityId && item.Level == helper.enums.StateLevel.Region.value }));
						},
					},
				}),
				value: $scope.temp.selectedRegionId,
				dataTextField: "Name",
				dataValueField: "ID",
				//optionLabel: "انتخاب منطقه",
				change: function (dataItem) {
					var item = this.dataItem();
					$scope.temp.selectedRegionId = item.ID;
				}
			}
		}
		function addFile(name, file) {
			if ($scope.temp.formData.get(name)) {
				$scope.temp.formData.set(name, file)
			}
			else {
				$scope.temp.formData.append(name, file)
			}
		}
		function removeFile(name) {
			$scope.temp.formData.remove(name)
		}

		$scope.welfareChange = function (e, welfare) {
			if (e.target.checked) {
				welfare.selected = true;
			} else {
				welfare.selected = false;
			}
		}
		$scope.addAttachmentFileUpload = function () {
			$scope.model.Attachments.push({ FileName: 'انتخاب فایل', attachmentUID: helper.uuidv4() });
		}
		$scope.removeAttachment = function (attach) {
			$scope.temp.attachments=$scope.temp.attachments.filter(function (item) {
				return item.ID != attach.ID;
			});
			for (var i = 0; i < $scope.model.Attachments.length; i++) {
				if ($scope.model.Attachments[i].ID == attach.ID) {
					$scope.model.Attachments[i].IsDeleted = true;
					break;
				}
			}
			$scope.$$phase || $scope.$apply();
		}
		$scope.deleteAttachmentFileUpload = function (index,uid) {
			for (var i = 0; i < $scope.model.Attachments.length; i++) {
				if (i == index) {
					$scope.model.Attachments.splice(i, 1);
					removeFileFromFormData("Attachments-" + uid);
				}
			}
		}
		$scope.save = function () {
			$scope.model.Welfares = [];
			for (var i = 0; i < $scope.temp.welfares.length; i++) {
				var item = $scope.temp.welfares[i];
				if (item.selected) {
					$scope.model.Welfares.push({ ID: item.Key, Name: item.Value })
				}
			}

			$scope.model.StateId = $scope.temp.selectedStateId;
			$scope.model.CityId = $scope.temp.selectedCityId;
			$scope.model.RegionId = $scope.temp.selectedRegionId;

			if ($scope.model.Type == 1) {
				$scope.model.MortgagePrice = numeral($scope.model.MortgagePrice).value();
				$scope.model.RentalPrice = numeral($scope.model.RentalPrice).value();
			}
			else {
				$scope.model.SalePrice = numeral($scope.model.SalePrice).value();
			}

			//var tempAttachments = $scope.temp.attachments;
			$scope.temp.attachments = [];
			for (var i = 0; i < $("#attachments")[0].files.length; i++) {
				var file = $("#attachments")[0].files[i];
				$scope.temp.attachments.push(new DataFileInfo(file, {
					ExtraInfoString: "Attachment",
				}))
			}

			var coverImageFile = $("#fuCoverImage")[0].files[0];
			if (coverImageFile) {
				$scope.temp.attachments.push(new DataFileInfo(coverImageFile, {
					ExtraInfoString: "CoverImage"
				}))
			}

			$scope.model.CoverImagePath = null;
			$scope.model.SlideImagePath = null;
			dataService.postDataAndFiles('propertyInfoGuest/SubmitProperty', $scope.model, $scope.temp.attachments).then(function (result) {
				messageService.success('عملیات با موفقیت ثبت گردید');
				$scope.$$phase || $scope.$apply();
			});
		}

		$(document).delegate('#attachments', 'change', function (e) {
			if (e && e.target) {
				for (var i = 0; i < e.target.files.length; i++) {

				}
			}
		});
		$(document).delegate('#fuCoverImage', 'change', function (e) {
			if (e && e.target) {
				var file = e.target.files[0];
				helper.getFileInfo(file).start()
					.onComplete(function (result) {
						$scope.model.CoverImagePath = result.fileReader.base64;	
						$scope.$$phase || $scope.$apply();
					});
			}
		});
		$(document).delegate('[numeral]', 'keyup', function () {
			var myNumeral = numeral(this.value)
			if (myNumeral.value()) {
				this.value = numeral(myNumeral.value()).format("0,0");
			}
		})

	});

</script>